/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/AddEmployeeForm.tsx":
/*!********************************************!*\
  !*** ./src/components/AddEmployeeForm.tsx ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// 'use client';\n// import { useState } from 'react';\n// import { useMutation } from '@apollo/client';\n// import { ADD_EMPLOYEE } from '../graphql/mutations'\n// import { GET_ALL_EMPLOYEES } from '@/graphql/queries';\n// const AddEmployeeForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     position: '',\n//     department: '',\n//     salary: '',\n//   });\n//   const [addEmployee, { loading, error }] = useMutation(ADD_EMPLOYEE, {\n//     refetchQueries: [{ query: GET_ALL_EMPLOYEES }],\n//   });\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     // Validate\n//     if (\n//       !formData.name ||\n//       !formData.position ||\n//       !formData.department ||\n//       !formData.salary ||\n//       isNaN(Number(formData.salary))\n//     ) {\n//       alert('Please fill all fields correctly');\n//       return;\n//     }\n//     console.log(\"Variables being sent:\", {\n//   name: formData.name,\n//   position: formData.position,\n//   department: formData.department,\n//   salary: parseInt(formData.salary),\n// });\n//     try {\n//       await addEmployee({\n//         variables: {\n//           name: formData.name,\n//           position: formData.position,\n//           department: formData.department,\n//           salary: parseInt(formData.salary),\n//         },\n//       });\n//       // Clear form\n//       setFormData({\n//         name: '',\n//         position: '',\n//         department: '',\n//         salary: '',\n//       });\n//       alert('Employee added successfully!');\n//     } catch (err) {\n//       console.error('Error adding employee:', err);\n//     }\n//   };\n//   return (\n//     <form onSubmit={handleSubmit} className=\"bg-white p-4 shadow rounded max-w-xl mx-auto mt-6\">\n//       <h2 className=\"text-lg font-semibold mb-4\">Add New Employee</h2>\n//       <div className=\"grid gap-4\">\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           className=\"border p-2 rounded\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"position\"\n//           placeholder=\"Position\"\n//           value={formData.position}\n//           onChange={handleChange}\n//           className=\"border p-2 rounded\"\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"department\"\n//           placeholder=\"Department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"border p-2 rounded\"\n//         />\n//         <input\n//           type=\"number\"\n//           name=\"salary\"\n//           placeholder=\"Salary\"\n//           value={formData.salary}\n//           onChange={handleChange}\n//           className=\"border p-2 rounded\"\n//         />\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\n//         >\n//           {loading ? 'Adding...' : 'Add Employee'}\n//         </button>\n//         {error && <p className=\"text-red-500\">Error: {error.message}</p>}\n//       </div>\n//     </form>\n//   );\n// };\n// export default AddEmployeeForm;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0FkZEVtcGxveWVlRm9ybS50c3giLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBRWhCLG9DQUFvQztBQUNwQyxnREFBZ0Q7QUFDaEQsc0RBQXNEO0FBQ3RELHlEQUF5RDtBQUV6RCxrQ0FBa0M7QUFDbEMsK0NBQStDO0FBQy9DLGdCQUFnQjtBQUNoQixvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQixRQUFRO0FBRVIsMEVBQTBFO0FBQzFFLHNEQUFzRDtBQUN0RCxRQUFRO0FBRVIsdUVBQXVFO0FBQ3ZFLHFFQUFxRTtBQUNyRSxPQUFPO0FBRVAseURBQXlEO0FBQ3pELDBCQUEwQjtBQUUxQixrQkFBa0I7QUFDbEIsV0FBVztBQUNYLDBCQUEwQjtBQUMxQiw4QkFBOEI7QUFDOUIsZ0NBQWdDO0FBQ2hDLDRCQUE0QjtBQUM1Qix1Q0FBdUM7QUFDdkMsVUFBVTtBQUNWLG1EQUFtRDtBQUNuRCxnQkFBZ0I7QUFDaEIsUUFBUTtBQUVSLDZDQUE2QztBQUM3Qyx5QkFBeUI7QUFDekIsaUNBQWlDO0FBQ2pDLHFDQUFxQztBQUNyQyx1Q0FBdUM7QUFDdkMsTUFBTTtBQUdOLFlBQVk7QUFDWiw0QkFBNEI7QUFDNUIsdUJBQXVCO0FBQ3ZCLGlDQUFpQztBQUNqQyx5Q0FBeUM7QUFDekMsNkNBQTZDO0FBQzdDLCtDQUErQztBQUMvQyxhQUFhO0FBQ2IsWUFBWTtBQUVaLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsb0JBQW9CO0FBQ3BCLHdCQUF3QjtBQUN4QiwwQkFBMEI7QUFDMUIsc0JBQXNCO0FBQ3RCLFlBQVk7QUFFWiwrQ0FBK0M7QUFDL0Msc0JBQXNCO0FBQ3RCLHNEQUFzRDtBQUN0RCxRQUFRO0FBQ1IsT0FBTztBQUVQLGFBQWE7QUFDYixtR0FBbUc7QUFDbkcseUVBQXlFO0FBQ3pFLHFDQUFxQztBQUNyQyxpQkFBaUI7QUFDakIsd0JBQXdCO0FBQ3hCLHdCQUF3QjtBQUN4QiwrQkFBK0I7QUFDL0Isa0NBQWtDO0FBQ2xDLG9DQUFvQztBQUNwQywyQ0FBMkM7QUFDM0MsYUFBYTtBQUNiLGlCQUFpQjtBQUNqQix3QkFBd0I7QUFDeEIsNEJBQTRCO0FBQzVCLG1DQUFtQztBQUNuQyxzQ0FBc0M7QUFDdEMsb0NBQW9DO0FBQ3BDLDJDQUEyQztBQUMzQyxhQUFhO0FBQ2IsaUJBQWlCO0FBQ2pCLHdCQUF3QjtBQUN4Qiw4QkFBOEI7QUFDOUIscUNBQXFDO0FBQ3JDLHdDQUF3QztBQUN4QyxvQ0FBb0M7QUFDcEMsMkNBQTJDO0FBQzNDLGFBQWE7QUFDYixpQkFBaUI7QUFDakIsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQixpQ0FBaUM7QUFDakMsb0NBQW9DO0FBQ3BDLG9DQUFvQztBQUNwQywyQ0FBMkM7QUFDM0MsYUFBYTtBQUNiLGtCQUFrQjtBQUNsQiwwQkFBMEI7QUFDMUIsbUZBQW1GO0FBQ25GLFlBQVk7QUFDWixxREFBcUQ7QUFDckQsb0JBQW9CO0FBQ3BCLDRFQUE0RTtBQUM1RSxlQUFlO0FBQ2YsY0FBYztBQUNkLE9BQU87QUFDUCxLQUFLO0FBRUwsa0NBQWtDIiwic291cmNlcyI6WyJEOlxcRW1wbG95ZWVEaXJlY3RvcnlBcHBcXGZyb250ZW5kXFxzcmNcXGNvbXBvbmVudHNcXEFkZEVtcGxveWVlRm9ybS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gJ3VzZSBjbGllbnQnO1xyXG5cclxuLy8gaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbi8vIGltcG9ydCB7IHVzZU11dGF0aW9uIH0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xyXG4vLyBpbXBvcnQgeyBBRERfRU1QTE9ZRUUgfSBmcm9tICcuLi9ncmFwaHFsL211dGF0aW9ucydcclxuLy8gaW1wb3J0IHsgR0VUX0FMTF9FTVBMT1lFRVMgfSBmcm9tICdAL2dyYXBocWwvcXVlcmllcyc7XHJcblxyXG4vLyBjb25zdCBBZGRFbXBsb3llZUZvcm0gPSAoKSA9PiB7XHJcbi8vICAgY29uc3QgW2Zvcm1EYXRhLCBzZXRGb3JtRGF0YV0gPSB1c2VTdGF0ZSh7XHJcbi8vICAgICBuYW1lOiAnJyxcclxuLy8gICAgIHBvc2l0aW9uOiAnJyxcclxuLy8gICAgIGRlcGFydG1lbnQ6ICcnLFxyXG4vLyAgICAgc2FsYXJ5OiAnJyxcclxuLy8gICB9KTtcclxuXHJcbi8vICAgY29uc3QgW2FkZEVtcGxveWVlLCB7IGxvYWRpbmcsIGVycm9yIH1dID0gdXNlTXV0YXRpb24oQUREX0VNUExPWUVFLCB7XHJcbi8vICAgICByZWZldGNoUXVlcmllczogW3sgcXVlcnk6IEdFVF9BTExfRU1QTE9ZRUVTIH1dLFxyXG4vLyAgIH0pO1xyXG5cclxuLy8gICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZTogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcclxuLy8gICAgIHNldEZvcm1EYXRhKHsgLi4uZm9ybURhdGEsIFtlLnRhcmdldC5uYW1lXTogZS50YXJnZXQudmFsdWUgfSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgaGFuZGxlU3VibWl0ID0gYXN5bmMgKGU6IFJlYWN0LkZvcm1FdmVudCkgPT4ge1xyXG4vLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuLy8gICAgIC8vIFZhbGlkYXRlXHJcbi8vICAgICBpZiAoXHJcbi8vICAgICAgICFmb3JtRGF0YS5uYW1lIHx8XHJcbi8vICAgICAgICFmb3JtRGF0YS5wb3NpdGlvbiB8fFxyXG4vLyAgICAgICAhZm9ybURhdGEuZGVwYXJ0bWVudCB8fFxyXG4vLyAgICAgICAhZm9ybURhdGEuc2FsYXJ5IHx8XHJcbi8vICAgICAgIGlzTmFOKE51bWJlcihmb3JtRGF0YS5zYWxhcnkpKVxyXG4vLyAgICAgKSB7XHJcbi8vICAgICAgIGFsZXJ0KCdQbGVhc2UgZmlsbCBhbGwgZmllbGRzIGNvcnJlY3RseScpO1xyXG4vLyAgICAgICByZXR1cm47XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgY29uc29sZS5sb2coXCJWYXJpYWJsZXMgYmVpbmcgc2VudDpcIiwge1xyXG4vLyAgIG5hbWU6IGZvcm1EYXRhLm5hbWUsXHJcbi8vICAgcG9zaXRpb246IGZvcm1EYXRhLnBvc2l0aW9uLFxyXG4vLyAgIGRlcGFydG1lbnQ6IGZvcm1EYXRhLmRlcGFydG1lbnQsXHJcbi8vICAgc2FsYXJ5OiBwYXJzZUludChmb3JtRGF0YS5zYWxhcnkpLFxyXG4vLyB9KTtcclxuXHJcblxyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgYXdhaXQgYWRkRW1wbG95ZWUoe1xyXG4vLyAgICAgICAgIHZhcmlhYmxlczoge1xyXG4vLyAgICAgICAgICAgbmFtZTogZm9ybURhdGEubmFtZSxcclxuLy8gICAgICAgICAgIHBvc2l0aW9uOiBmb3JtRGF0YS5wb3NpdGlvbixcclxuLy8gICAgICAgICAgIGRlcGFydG1lbnQ6IGZvcm1EYXRhLmRlcGFydG1lbnQsXHJcbi8vICAgICAgICAgICBzYWxhcnk6IHBhcnNlSW50KGZvcm1EYXRhLnNhbGFyeSksXHJcbi8vICAgICAgICAgfSxcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICAvLyBDbGVhciBmb3JtXHJcbi8vICAgICAgIHNldEZvcm1EYXRhKHtcclxuLy8gICAgICAgICBuYW1lOiAnJyxcclxuLy8gICAgICAgICBwb3NpdGlvbjogJycsXHJcbi8vICAgICAgICAgZGVwYXJ0bWVudDogJycsXHJcbi8vICAgICAgICAgc2FsYXJ5OiAnJyxcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBhbGVydCgnRW1wbG95ZWUgYWRkZWQgc3VjY2Vzc2Z1bGx5IScpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFkZGluZyBlbXBsb3llZTonLCBlcnIpO1xyXG4vLyAgICAgfVxyXG4vLyAgIH07XHJcblxyXG4vLyAgIHJldHVybiAoXHJcbi8vICAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlU3VibWl0fSBjbGFzc05hbWU9XCJiZy13aGl0ZSBwLTQgc2hhZG93IHJvdW5kZWQgbWF4LXcteGwgbXgtYXV0byBtdC02XCI+XHJcbi8vICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItNFwiPkFkZCBOZXcgRW1wbG95ZWU8L2gyPlxyXG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ2FwLTRcIj5cclxuLy8gICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuLy8gICAgICAgICAgIG5hbWU9XCJuYW1lXCJcclxuLy8gICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTmFtZVwiXHJcbi8vICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEubmFtZX1cclxuLy8gICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XHJcbi8vICAgICAgICAgICBjbGFzc05hbWU9XCJib3JkZXIgcC0yIHJvdW5kZWRcIlxyXG4vLyAgICAgICAgIC8+XHJcbi8vICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbi8vICAgICAgICAgICBuYW1lPVwicG9zaXRpb25cIlxyXG4vLyAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJQb3NpdGlvblwiXHJcbi8vICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEucG9zaXRpb259XHJcbi8vICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxyXG4vLyAgICAgICAgICAgY2xhc3NOYW1lPVwiYm9yZGVyIHAtMiByb3VuZGVkXCJcclxuLy8gICAgICAgICAvPlxyXG4vLyAgICAgICAgIDxpbnB1dFxyXG4vLyAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4vLyAgICAgICAgICAgbmFtZT1cImRlcGFydG1lbnRcIlxyXG4vLyAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJEZXBhcnRtZW50XCJcclxuLy8gICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YS5kZXBhcnRtZW50fVxyXG4vLyAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cclxuLy8gICAgICAgICAgIGNsYXNzTmFtZT1cImJvcmRlciBwLTIgcm91bmRlZFwiXHJcbi8vICAgICAgICAgLz5cclxuLy8gICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxyXG4vLyAgICAgICAgICAgbmFtZT1cInNhbGFyeVwiXHJcbi8vICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNhbGFyeVwiXHJcbi8vICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEuc2FsYXJ5fVxyXG4vLyAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cclxuLy8gICAgICAgICAgIGNsYXNzTmFtZT1cImJvcmRlciBwLTIgcm91bmRlZFwiXHJcbi8vICAgICAgICAgLz5cclxuLy8gICAgICAgICA8YnV0dG9uXHJcbi8vICAgICAgICAgICB0eXBlPVwic3VibWl0XCJcclxuLy8gICAgICAgICAgIGNsYXNzTmFtZT1cImJnLWJsdWUtNTAwIHRleHQtd2hpdGUgcHktMiBweC00IHJvdW5kZWQgaG92ZXI6YmctYmx1ZS02MDBcIlxyXG4vLyAgICAgICAgID5cclxuLy8gICAgICAgICAgIHtsb2FkaW5nID8gJ0FkZGluZy4uLicgOiAnQWRkIEVtcGxveWVlJ31cclxuLy8gICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICB7ZXJyb3IgJiYgPHAgY2xhc3NOYW1lPVwidGV4dC1yZWQtNTAwXCI+RXJyb3I6IHtlcnJvci5tZXNzYWdlfTwvcD59XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9mb3JtPlxyXG4vLyAgICk7XHJcbi8vIH07XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBBZGRFbXBsb3llZUZvcm07XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/AddEmployeeForm.tsx\n"));

/***/ })

});